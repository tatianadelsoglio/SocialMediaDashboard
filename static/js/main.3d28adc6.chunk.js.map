{"version":3,"sources":["header.js","card.js","top-card-list.js","card-small.js","overview.js","switch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","children","className","Card","username","followers","todayFollowers","icon","name","cardClass","src","alt","cardListData","id","TopCardList","map","cardData","CardSmall","growth","pageViews","cardSmallList","key","Overview","Switch","setDarkMode","checked","setChecked","ref","useRef","onChange","current","type","htmlFor","App","useState","darkMode","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oWAoBeA,MAhBf,YAA+B,IAAbC,EAAY,EAAZA,SAClB,OACI,wBAAQC,UAAU,SAAlB,SACA,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,cAAf,UACA,gCACI,wDACA,mBAAGA,UAAU,eAAb,yCAEHD,U,aCUME,MApBf,YAAoE,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrDC,EAAS,eAAWD,GAC1B,OACI,0BAASN,UAAWO,EAApB,UACA,oBAAGP,UAAU,aAAb,UACI,qBAAKQ,IAAKH,EAAMI,IAAI,KACnBP,KAEL,oBAAGF,UAAU,iBAAb,UACI,sBAAMA,UAAU,wBAAhB,SAAyCG,IACzC,sBAAMH,UAAU,uBAAhB,0BAEJ,oBAAGA,UAAU,aAAb,UACI,qBAAKQ,IAAI,qBAAqBC,IAAI,KACjCL,EAFL,gBCXEM,G,MAAe,CACrB,CACIR,SAAU,oBACVS,GAAI,EACJR,UAAW,OACXC,eAAgB,GAChBC,KAAM,2BACNC,KAAM,YAEV,CACIJ,SAAU,oBACVS,GAAI,EACJR,UAAW,MACXC,eAAgB,GAChBC,KAAM,0BACNC,KAAM,WAGV,CACIJ,SAAU,oBACVS,GAAI,EACJR,UAAW,KACXC,eAAgB,GAChBC,KAAM,4BACNC,KAAM,aAIV,CACIJ,SAAU,oBACVS,GAAI,EACJR,UAAW,MACXC,gBAAiB,GACjBC,KAAM,0BACNC,KAAM,aAmBKM,MAdf,WACA,OACI,yBAASZ,UAAU,YAAnB,SACA,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,OAAf,SAEIU,EAAaG,KAAI,SAACC,GAAD,OAAc,cAAC,EAAD,eAA4BA,GAAjBA,EAASH,c,MC9ChD,SAASI,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,UAAWZ,EAAQ,EAARA,KACvD,OACI,sBAAKL,UAAU,aAAf,UACA,mBAAGA,UAAU,mBAAb,wBACA,mBAAGA,UAAU,kBAAb,SACI,qBAAKQ,IAAKH,EAAMI,IAAI,OAExB,mBAAGT,UAAU,oBAAb,SAAkCiB,IAClC,mBAAGjB,UAAU,wBAAb,SACI,iCACA,qBAAKQ,IAAI,qBAAqBC,IAAI,KACjCO,EAFD,Y,UCRFE,EAAgB,CACtB,CACIb,KAAM,2BACNY,UAAW,KACXD,OAAQ,EACRG,IAAK,GAET,CACId,KAAM,0BACNY,UAAW,KACXD,OAAQ,KACRG,IAAK,GAET,CACId,KAAM,4BACNY,UAAW,OACXD,OAAQ,KACRG,IAAK,GAET,CACId,KAAM,0BACNY,UAAW,MACXD,OAAQ,IACRG,IAAK,IAKM,SAASC,IACxB,OACI,yBAASpB,UAAU,WAAnB,SACA,sBAAKA,UAAU,UAAf,UACI,kDACA,qBAAKA,UAAU,OAAf,SAEIkB,EAAcL,KAAI,gBAAGR,EAAH,EAAGA,KAAMY,EAAT,EAASA,UAAWD,EAApB,EAAoBA,OAAQG,EAA5B,EAA4BA,IAA5B,OAClB,cAACJ,EAAD,CACIV,KAAMA,EAENY,UAAWA,EACXD,OAAQA,GAFHG,a,MCrBNE,MAlBf,YAAuD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAClCC,EAAMC,iBAAO,MAMnB,OACI,sBAAK1B,UAAU,YAAf,UACA,mBAAGA,UAAU,kBAAb,uBACA,uBAAOyB,IAAKA,EAAKE,SARrB,WACIH,EAAWC,EAAIG,QAAQL,SACvBD,EAAYG,EAAIG,QAAQL,UAMiBM,KAAK,WAAWN,QAASA,EAASvB,UAAU,WAAWW,GAAG,aACnG,uBAAOX,UAAU,SAAS8B,QAAQ,iBC2BvBC,MAlCf,WACE,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBX,EAAjB,KACA,EAA8BU,oBAAS,GAAvC,mBAAOT,EAAP,KAAgBC,EAAhB,KACMU,EAAYD,EAAW,eAAiB,gBAE9C,SAASE,EAAYC,GACnBd,EAAYc,EAAGC,SACfb,EAAWY,EAAGC,SAahB,OAVAC,qBAAU,WACR,IAAMF,EAAKG,OAAOC,WAAW,gCAI7B,OAHAJ,EAAGK,YAAYN,GACfb,EAAYc,EAAGC,SACfb,EAAWY,EAAGC,SACP,WACLD,EAAGM,eAAeP,MAEnB,IAGD,uBAAMnC,UAAWkC,EAAjB,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEZ,YAAaA,EACbC,QAASA,EACTC,WAAYA,MAGhB,cAAC,EAAD,IACA,cAACJ,EAAD,QCzBSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d28adc6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\n\r\n\r\nfunction Header({ children }) {\r\nreturn (\r\n    <header className=\"header\">\r\n    <div className=\"wrapper\">\r\n        <div className=\"header-grid\">\r\n        <div>\r\n            <h1>Social Media Dashboard</h1>\r\n            <p className=\"header-total\">Total Followers: 23, 004</p>\r\n        </div>\r\n        {children}\r\n        </div>\r\n    </div>\r\n    </header>\r\n)\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './card.css'\r\n\r\nfunction Card({ username, followers, todayFollowers, icon, name }) {\r\nconst cardClass = `card ${name}`\r\nreturn (\r\n    <article className={cardClass}>\r\n    <p className=\"card-title\">\r\n        <img src={icon} alt=\"\" />\r\n        {username}\r\n    </p>\r\n    <p className=\"card-followers\">\r\n        <span className=\"card-followers-number\">{followers}</span>\r\n        <span className=\"card-followers-title\">Followers</span>\r\n    </p>\r\n    <p className=\"card-today\">\r\n        <img src=\"images/icon-up.svg\" alt=\"\" />\r\n        {todayFollowers} Today\r\n    </p>\r\n    </article>\r\n)\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './card'\r\nimport './top-card-list.css'\r\n\r\nconst cardListData = [\r\n{\r\n    username: '@tatianadelsoglio',\r\n    id: 1,\r\n    followers: '1596',\r\n    todayFollowers: 12,\r\n    icon: 'images/icon-facebook.svg',\r\n    name: 'facebook',\r\n},\r\n{\r\n    username: '@tatianadelsoglio',\r\n    id: 2,\r\n    followers: '28k',\r\n    todayFollowers: 20,\r\n    icon: 'images/icon-twitter.svg',\r\n    name: 'twitter',\r\n\r\n},\r\n{\r\n    username: '@tatianadelsoglio',\r\n    id: 3,\r\n    followers: '6k',\r\n    todayFollowers: 30,\r\n    icon: 'images/icon-instagram.svg',\r\n    name: 'instagram',\r\n\r\n\r\n},\r\n{\r\n    username: '@tatianadelsoglio',\r\n    id: 4,\r\n    followers: '12k',\r\n    todayFollowers: -50,\r\n    icon: 'images/icon-youtube.svg',\r\n    name: 'youtube',\r\n\r\n},\r\n]\r\n\r\nfunction TopCardList() {\r\nreturn (\r\n    <section className=\"top-cards\">\r\n    <div className=\"wrapper\">\r\n        <div className=\"grid\">\r\n        {\r\n            cardListData.map((cardData) => <Card key={cardData.id} {...cardData} />)\r\n        }\r\n        </div>\r\n    </div>\r\n    </section>\r\n)\r\n}\r\n\r\nexport default TopCardList","import React from 'react'\r\nimport './card-small.css'\r\n\r\nexport default function CardSmall({ growth, pageViews, icon }) {\r\nreturn (\r\n    <div className=\"card-small\">\r\n    <p className=\"card-small-views\">Page Views</p>\r\n    <p className=\"card-small-icon\">\r\n        <img src={icon} alt=\"\" />\r\n    </p>\r\n    <p className=\"card-small-number\">{pageViews}</p>\r\n    <p className=\"card-small-percentage\">\r\n        <span>\r\n        <img src=\"images/icon-up.svg\" alt=\"\" />\r\n        {growth}%\r\n    </span>\r\n    </p>\r\n    </div>\r\n)\r\n}","import React from 'react'\r\nimport CardSmall from './card-small'\r\nimport './overview.css'\r\n\r\nconst cardSmallList = [\r\n{\r\n    icon: 'images/icon-facebook.svg',\r\n    pageViews: '87',\r\n    growth: 3,\r\n    key: 1,\r\n},\r\n{\r\n    icon: 'images/icon-twitter.svg',\r\n    pageViews: '52',\r\n    growth: 2257,\r\n    key: 2,\r\n},\r\n{\r\n    icon: 'images/icon-instagram.svg',\r\n    pageViews: '5462',\r\n    growth: 1375,\r\n    key: 3,\r\n},\r\n{\r\n    icon: 'images/icon-youtube.svg',\r\n    pageViews: '117',\r\n    growth: 303,\r\n    key: 4,\r\n},\r\n\r\n]\r\n\r\nexport default function Overview() {\r\nreturn (\r\n    <section className=\"overview\">\r\n    <div className=\"wrapper\">\r\n        <h2>Overview - Today</h2>\r\n        <div className=\"grid\">\r\n        {\r\n            cardSmallList.map(({ icon, pageViews, growth, key }) => (\r\n            <CardSmall\r\n                icon={icon}\r\n                key={key}\r\n                pageViews={pageViews}\r\n                growth={growth}\r\n            />\r\n            ))\r\n        }\r\n\r\n\r\n        </div>\r\n    </div>\r\n    </section>\r\n)\r\n}","import React, { useRef } from 'react'\r\nimport './switch.css'\r\n\r\nfunction Switch({ setDarkMode, checked, setChecked }) {\r\nconst ref = useRef(null)\r\nfunction handleChange() {\r\n    setChecked(ref.current.checked)\r\n    setDarkMode(ref.current.checked)\r\n}\r\n\r\nreturn (\r\n    <div className=\"dark-mode\" >\r\n    <p className=\"dark-mode-title\">Dark Mode</p>\r\n    <input ref={ref} onChange={handleChange} type=\"checkbox\" checked={checked} className=\"checkbox\" id=\"checkbox\" />\r\n    <label className=\"switch\" htmlFor=\"checkbox\">\r\n\r\n    </label>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Switch","import React, { useState, useEffect } from 'react';\nimport './globals.css';\nimport Header from './header.js'\nimport TopCardList from './top-card-list.js'\nimport Overview from './overview.js'\nimport Switch from './switch'\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n\n  return (\n    <main className={mainClass}>\n      <Header >\n        <Switch\n          setDarkMode={setDarkMode}\n          checked={checked}\n          setChecked={setChecked}\n        />\n      </Header>\n      <TopCardList />\n      <Overview />\n    </main>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}